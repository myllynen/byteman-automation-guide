RULE Register dynamic MBean
CLASS com.example.proftest.TestUnit
METHOD <init>
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO registerMBean("byteman:type=Statistics", true, true, true, true, true);
ENDRULE
RULE Increment instance count: com.example.proftest.TestUnit
CLASS com.example.proftest.TestUnit
METHOD <init>
AT EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementInstanceCount($CLASS);
ENDRULE
RULE Record instance creation time: com.example.proftest.TestUnit
CLASS com.example.proftest.TestUnit
METHOD <init>
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordInstanceCreationTime($CLASS, $0);
ENDRULE
RULE Record instance lifetime, no exceptions: com.example.proftest.TestUnit
CLASS com.example.proftest.TestUnit
METHOD run
AT EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordInstanceLifetime($CLASS, $0);
ENDRULE
RULE Record instance lifetime, if exceptions: com.example.proftest.TestUnit
CLASS com.example.proftest.TestUnit
METHOD run
AT EXCEPTION EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordInstanceLifetime($CLASS, $0);
ENDRULE
RULE Increment call count: com.example.proftest.TestUnit - a
CLASS com.example.proftest.TestUnit
METHOD a
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodCallCount($CLASS, $METHOD);
ENDRULE
RULE Record call time of method: com.example.proftest.TestUnit - a
CLASS com.example.proftest.TestUnit
METHOD a
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodCallTime($CLASS, $METHOD);
ENDRULE
RULE Record execution time of method: com.example.proftest.TestUnit - a
CLASS com.example.proftest.TestUnit
METHOD a
AT EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodExecTime($CLASS, $METHOD);
ENDRULE
RULE Exits via exceptions from method: com.example.proftest.TestUnit - a
CLASS com.example.proftest.TestUnit
METHOD a
AT EXCEPTION EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodExitExceptCount($CLASS, $METHOD);
ENDRULE
RULE Increment call count: com.example.proftest.TestUnit - b
CLASS com.example.proftest.TestUnit
METHOD b
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodCallCount($CLASS, $METHOD);
ENDRULE
RULE Record call time of method: com.example.proftest.TestUnit - b
CLASS com.example.proftest.TestUnit
METHOD b
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodCallTime($CLASS, $METHOD);
ENDRULE
RULE Record execution time of method: com.example.proftest.TestUnit - b
CLASS com.example.proftest.TestUnit
METHOD b
AT EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodExecTime($CLASS, $METHOD);
ENDRULE
RULE Exits via exceptions from method: com.example.proftest.TestUnit - b
CLASS com.example.proftest.TestUnit
METHOD b
AT EXCEPTION EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodExitExceptCount($CLASS, $METHOD);
ENDRULE
RULE Increment call count: com.example.proftest.TestUnit - c
CLASS com.example.proftest.TestUnit
METHOD c
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodCallCount($CLASS, $METHOD);
ENDRULE
RULE Record call time of method: com.example.proftest.TestUnit - c
CLASS com.example.proftest.TestUnit
METHOD c
AT ENTRY
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodCallTime($CLASS, $METHOD);
ENDRULE
RULE Record execution time of method: com.example.proftest.TestUnit - c
CLASS com.example.proftest.TestUnit
METHOD c
AT EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO recordMethodExecTime($CLASS, $METHOD);
ENDRULE
RULE Exits via exceptions from method: com.example.proftest.TestUnit - c
CLASS com.example.proftest.TestUnit
METHOD c
AT EXCEPTION EXIT
HELPER org.jboss.byteman.automate.proftool.JMXHelper
COMPILE
IF true
DO incrementMethodExitExceptCount($CLASS, $METHOD);
ENDRULE
